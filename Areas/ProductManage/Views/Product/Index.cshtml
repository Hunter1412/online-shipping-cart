@model IEnumerable<OnlineShoppingCart.Models.DTOs.ProductDto>;

@{
    ViewData["Title"] = "Product List";
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">@ViewData["Title"]</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">
                            <a href="#">Home</a>
                        </li>
                        <li class="breadcrumb-item active">
                            <a href="">@ViewData["Title"]</a>
                        </li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->

    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">

            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-content-center">
                        <strong class="h3 card-title">@ViewData["Title"]</strong>
                        <div class="flex-item">
                            <a asp-area="ProductManage" asp-controller="Product" asp-action="Create"
                                class="btn btn-success">Create New</a>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="table_product" class="table table-bordered table-striped text-center"
                        aria-label="list-voucher">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Id)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    Unit Price
                                </th>
                                <th>
                                    Inventory Quantity (pcs)
                                </th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a asp-area="ProductManage" asp-controller="Product" asp-action="Details"
                                            asp-route-id="@item.Id" class="text-info">
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </a>
                                    </td>
                                    <td>
                                        <a asp-area="ProductManage" asp-controller="Product" asp-action="Details"
                                            asp-route-id="@item.Id" class="text-info">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </a>
                                    </td>
                                    <td>
                                        @{
                                            var price = item.Price - item.Promotion;
                                            <span class="text-success">$@price.ToString()</span>
                                        }
                                        <small
                                            style="color: red;text-decoration: line-through;">
                                            $@item.Price.ToString("N2")
                                        </small>

                                    </td>
                                    <td>
                                        @item.Inventories!.Where(x => x.ProductId == item.Id).Select(x => x.Quantity).Sum()
                                    </td>

                                    <td>
                                        <a asp-area="ProductManage" asp-controller="Product" asp-action="Edit"
                                            asp-route-id="@item.Id" class="text-warning">
                                            <i class="fas fa-edit" title="edit"></i></a> |
                                        <a asp-area="ProductManage" asp-controller="Product" asp-action="Delete"
                                            asp-route-id="@item.Id" class="text-danger">
                                            <i class="fa fa-trash" aria-hidden="true"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->

        </div>
        <!-- /.container-fluid -->
    </div>
    <!-- /.content -->
</div>

@{
    var dataTablePro = new OnlineShoppingCart.Models.DataTableView("#table_product");
}

@section Scripts {
    <partial name="_Datatables" model="dataTablePro" />

    <!-- Toastr -->
    <script src="~/plugins/toastr/toastr.min.js"></script>
    <script>
        $(function () {
            var Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

        });
    </script>

}